@using ProjectX.MVC.ViewModel;
@{
    var statusesList = new Dictionary<int, string>
    {
        [0] = "Pending",
        [1] = "Started",
        [2] = "Finished"
    };
}
@model GroupViewModel
<h2 class="text-center">Edit group</h2>
<form asp-action="Edit" method="post">
    <div class="form-group">
        <label asp-for="Number"></label>
        <input asp-for="Number" class="form-control" />
        <span class="alert-danger" asp-validation-for="Number"></span>
    </div>

    <div class="form-group">
        <label asp-for="StartDate"></label>
        <input asp-for="StartDate" class="form-control" />
        <span class="alert-danger" asp-validation-for="StartDate"></span>
    </div>

    <label class="my-1 mr-2" for="inlineFormCustomSelectPref1">Teacher</label>
    <select asp-for="TeacherId " class="custom-select my-1 mr-sm-2" id="inlineFormCustomSelectPref1">
        <option selected value="">Choose...</option>
        @foreach (TeacherViewModel teacher in ViewBag.Teachers)
        {
            <option value="@teacher.Id">@teacher.FullName</option>
        }
    </select>

    <label class="my-1 mr-2" for="inlineFormCustomSelectPref2">Status</label>
    <select asp-for="Status" class="custom-select my-1 mr-sm-2" id="inlineFormCustomSelectPref2" novalidate>
        <option selected value="">Choose...</option>
        @foreach (var status in statusesList)
        {
            <option value="@status.Key">@status.Value</option>
        }
    </select>
    <div class="text-center">
        <button class="btn btn-primary" type="submit">Save</button>
        <a class="btn btn-secondary" asp-action="Index">Cancel</a>
    </div>
</form>
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial.cshtml")
}